name: compile_and_test

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", pypy-2.7, pypy-3.8]
        exclude:
          - os: macos-latest
            python-version: "3.7"
          - os: windows-latest
            python-version: "3.7"
       - name: Run all of the unittests.
         run: python tests/unit/test_utils.py --build Release --os ${{ matrix.target }}
#   workflow_dispatch:
# defaults:
#   run:
#     shell: bash

# jobs:
#   build_and_test:
#     name: Build & test Lamscript on ${{ matrix.os }} with ${{ matrix.compiler }}.
#     runs-on: ${{ matrix.os }}
#     strategy:
#       matrix:
#         os: [ubuntu-latest, macos-latest]
#         compiler: [ g++-10 ]
#         include:
#           - os: ubuntu-latest
#             compiler: g++-10
#             target: Linux

#           - os: macos-latest
#             compiler: g++-10
#             target: Macos

#           - os: windows-latest
#             compiler: cl
#             target: Windows

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

#       - name: Run the projects setup.
#         run: ./scripts/setup.sh --within-ci true

#       - name: Add msbuild to PATH
#         if: ${{ matrix.os == 'windows-latest' }}
#         uses: microsoft/setup-msbuild@v1.0.2

#       - name: Run all of the unittests.
#         run: ./tests/unit/unittest.sh --build Release --os ${{ matrix.target }}