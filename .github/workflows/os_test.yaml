name: Style Check and Unittest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Cache OpenCV
  #       id: cache-open-cv
  #       uses: actions/cache@v1
  #       with:
  #         path: ../OpenCV
  #         key: ${{ runner.os }}-OpenCVCache

  #     - name: Install OpenCV
  #       uses: florianblume/install-opencv-action@v1
  #       with:
  #       cached: ${{ steps.cache-open-cv.outputs.cache-hit }}

  codestyle:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ippsra
          environment-file: environment.yml
      - name: Run pycodestyle test
        run: pycodestyle $(git ls-files "*.py")

  run_unit_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ippsra
          environment-file: environment.yml
      - name: Running unit tests
        run: python -m unittest tests/unit/test_utils.py

  macos_test:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: ippsra
          environment-file: environment.yml
      - name: Run pycodestyle test
        run: pycodestyle $(git ls-files "*.py")
      - name: Running unit tests
        run: python -m unittest tests/unit/test_utils.py
